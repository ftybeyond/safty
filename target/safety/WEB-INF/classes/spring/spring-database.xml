<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- BoneCP configuration -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
		<property name="idleConnectionTestPeriodInMinutes" value="${db.bonecp.idleConnectionTestPeriodInMinutes}"/>
		<property name="idleMaxAgeInMinutes" value="${db.bonecp.idleMaxAgeInMinutes}"/>
		<property name="maxConnectionsPerPartition" value="${db.bonecp.maxConnectionsPerPartition}"/>
		<property name="minConnectionsPerPartition" value="${db.bonecp.minConnectionsPerPartition}"/>
		<property name="partitionCount" value="${db.bonecp.partitionCount}"/>
		<property name="acquireIncrement" value="${db.bonecp.acquireIncrement}"/>
		<property name="statementsCacheSize" value="${db.bonecp.statementsCacheSize}"/>
	</bean>
     
     
	 <!-- 配置session工厂，这里用spring提供的AnnotationSessionFactoryBean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定实体类扫描包 -->
		<property name="packagesToScan">
			<list>
				<value>com.yessoft.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
			</props>
		</property>
	</bean>
	
	<!-- JDBCdao -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg index="0" ref="dataSource"></constructor-arg>
	</bean>
	

	<!-- hibernate事务管理器
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>-->

	<bean id="dataSourceProxy" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="dataSource"/>
	</bean>

	<!--事务管理器配置-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceProxy"/>
	</bean>
	<!--使用基于注解方式配置事务 -->
	<tx:annotation-driven  transaction-manager="transactionManager" />

	<bean class="com.yessoft.util.SpringUtils"/>
          

	<!--   利用spring的SqlMapClientFactoryBean类生成sqlmapclient工厂-->
    <bean id="sqlClient"  
        class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
        <property name="configLocation"  
            value="classpath:mybatisConfig.xml">
        </property>  
    </bean>  
</beans> 